"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const readPkg = require("read-pkg");
const writePkg = require("write-pkg");
exports.default = (pkgDir, keysMap) => __awaiter(this, void 0, void 0, function* () {
    const pkgJSON = yield readPkg({ cwd: pkgDir, normalize: false });
    const newPkgJSON = renameKeys(pkgJSON, keysMap);
    yield writePkg(pkgDir, newPkgJSON);
});
function renameKeys(target, keysMap) {
    const copy = {};
    for (let key of Object.keys(target)) {
        if (typeof keysMap[key] === 'string') {
            copy[keysMap[key]] = target[key];
        }
        else if (typeof keysMap[key] === 'object') {
            copy[key] = renameKeys(target[key], keysMap[key]);
        }
        else {
            copy[key] = target[key];
        }
    }
    return copy;
}
//# sourceMappingURL=renameKeys.js.map