/// <reference types="node" />
import { IncomingMessage } from 'http';
import ssri = require('ssri');
import { IntegrityMap } from 'ssri';
export { IntegrityMap };
export declare type UnpackProgress = (downloaded: number, totalSize: number) => void;
export interface UnpackRemoteStreamOptions extends UnpackLocalStreamOptions {
    onStart?: () => void;
    onProgress?: UnpackProgress;
    shasum?: string;
}
export declare function remote(stream: IncomingMessage, dest: string, opts?: UnpackRemoteStreamOptions): Promise<Index>;
export declare type Index = {
    [filename: string]: {
        size: number;
        generatingIntegrity?: Promise<ssri.IntegrityMap>;
    };
};
export interface UnpackLocalStreamOptions {
    generateIntegrity?: boolean;
    ignore?: (filename: string) => boolean;
}
export declare function local(stream: NodeJS.ReadableStream, dest: string, opts?: UnpackLocalStreamOptions): Promise<Index>;
