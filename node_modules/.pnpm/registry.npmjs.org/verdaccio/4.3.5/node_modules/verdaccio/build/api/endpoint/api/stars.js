"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _lodash = _interopRequireDefault(require("lodash"));

var _constants = require("../../../lib/constants");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @prettier

 */
function _default(route, storage) {
  route.get('/-/_view/starredByUser', (req, res, next) => {
    const remoteUsername = req.remote_user.name;
    storage.getLocalDatabase((err, localPackages) => {
      if (err) {
        return next(err);
      }

      const filteredPackages = localPackages.filter(localPackage => localPackage[_constants.USERS] ? _lodash.default.keys(localPackage[_constants.USERS]).indexOf(remoteUsername) >= 0 : false);
      res.status(_constants.HTTP_STATUS.OK);
      next({
        rows: filteredPackages.map(filteredPackage => ({
          value: filteredPackage.name
        }))
      });
    });
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9hcGkvZW5kcG9pbnQvYXBpL3N0YXJzLnRzIl0sIm5hbWVzIjpbInJvdXRlIiwic3RvcmFnZSIsImdldCIsInJlcSIsInJlcyIsIm5leHQiLCJyZW1vdGVVc2VybmFtZSIsInJlbW90ZV91c2VyIiwibmFtZSIsImdldExvY2FsRGF0YWJhc2UiLCJlcnIiLCJsb2NhbFBhY2thZ2VzIiwiZmlsdGVyZWRQYWNrYWdlcyIsImZpbHRlciIsImxvY2FsUGFja2FnZSIsIlVTRVJTIiwiXyIsImtleXMiLCJpbmRleE9mIiwic3RhdHVzIiwiSFRUUF9TVEFUVVMiLCJPSyIsInJvd3MiLCJtYXAiLCJmaWx0ZXJlZFBhY2thZ2UiLCJ2YWx1ZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUlBOztBQUNBOzs7O0FBTEE7Ozs7QUFZZSxrQkFBU0EsS0FBVCxFQUF3QkMsT0FBeEIsRUFBd0Q7QUFDckVELEVBQUFBLEtBQUssQ0FBQ0UsR0FBTixDQUFVLHdCQUFWLEVBQW9DLENBQUNDLEdBQUQsRUFBc0JDLEdBQXRCLEVBQXFDQyxJQUFyQyxLQUFzRTtBQUN4RyxVQUFNQyxjQUFjLEdBQUdILEdBQUcsQ0FBQ0ksV0FBSixDQUFnQkMsSUFBdkM7QUFFQVAsSUFBQUEsT0FBTyxDQUFDUSxnQkFBUixDQUF5QixDQUFDQyxHQUFELEVBQU1DLGFBQU4sS0FBa0M7QUFDekQsVUFBSUQsR0FBSixFQUFTO0FBQ1AsZUFBT0wsSUFBSSxDQUFDSyxHQUFELENBQVg7QUFDRDs7QUFFRCxZQUFNRSxnQkFBMEIsR0FBR0QsYUFBYSxDQUFDRSxNQUFkLENBQXNCQyxZQUFELElBQ3REQSxZQUFZLENBQUNDLGdCQUFELENBQVosR0FBc0JDLGdCQUFFQyxJQUFGLENBQU9ILFlBQVksQ0FBQ0MsZ0JBQUQsQ0FBbkIsRUFBNEJHLE9BQTVCLENBQW9DWixjQUFwQyxLQUF1RCxDQUE3RSxHQUFpRixLQURoRCxDQUFuQztBQUlBRixNQUFBQSxHQUFHLENBQUNlLE1BQUosQ0FBV0MsdUJBQVlDLEVBQXZCO0FBQ0FoQixNQUFBQSxJQUFJLENBQUM7QUFDSGlCLFFBQUFBLElBQUksRUFBRVYsZ0JBQWdCLENBQUNXLEdBQWpCLENBQXNCQyxlQUFELEtBQStCO0FBQ3hEQyxVQUFBQSxLQUFLLEVBQUVELGVBQWUsQ0FBQ2hCO0FBRGlDLFNBQS9CLENBQXJCO0FBREgsT0FBRCxDQUFKO0FBS0QsS0FmRDtBQWdCRCxHQW5CRDtBQW9CRCIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQHByZXR0aWVyXG5cbiAqL1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcbmltcG9ydCB7IFVTRVJTLCBIVFRQX1NUQVRVUyB9IGZyb20gJy4uLy4uLy4uL2xpYi9jb25zdGFudHMnO1xuaW1wb3J0IHsgUmVzcG9uc2UsIFJvdXRlciB9IGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IHsgJFJlcXVlc3RFeHRlbmQsICROZXh0RnVuY3Rpb25WZXIsIElTdG9yYWdlSGFuZGxlciB9IGZyb20gJy4uLy4uLy4uLy4uL3R5cGVzJztcbmltcG9ydCB7IFBhY2thZ2UgfSBmcm9tICdAdmVyZGFjY2lvL3R5cGVzJztcblxudHlwZSBQYWNrYWdlcyA9IFBhY2thZ2VbXTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ocm91dGU6IFJvdXRlciwgc3RvcmFnZTogSVN0b3JhZ2VIYW5kbGVyKTogdm9pZCB7XG4gIHJvdXRlLmdldCgnLy0vX3ZpZXcvc3RhcnJlZEJ5VXNlcicsIChyZXE6ICRSZXF1ZXN0RXh0ZW5kLCByZXM6IFJlc3BvbnNlLCBuZXh0OiAkTmV4dEZ1bmN0aW9uVmVyKTogdm9pZCA9PiB7XG4gICAgY29uc3QgcmVtb3RlVXNlcm5hbWUgPSByZXEucmVtb3RlX3VzZXIubmFtZTtcblxuICAgIHN0b3JhZ2UuZ2V0TG9jYWxEYXRhYmFzZSgoZXJyLCBsb2NhbFBhY2thZ2VzOiBQYWNrYWdlcykgPT4ge1xuICAgICAgaWYgKGVycikge1xuICAgICAgICByZXR1cm4gbmV4dChlcnIpO1xuICAgICAgfVxuXG4gICAgICBjb25zdCBmaWx0ZXJlZFBhY2thZ2VzOiBQYWNrYWdlcyA9IGxvY2FsUGFja2FnZXMuZmlsdGVyKChsb2NhbFBhY2thZ2U6IFBhY2thZ2UpID0+XG4gICAgICAgIGxvY2FsUGFja2FnZVtVU0VSU10gPyBfLmtleXMobG9jYWxQYWNrYWdlW1VTRVJTXSkuaW5kZXhPZihyZW1vdGVVc2VybmFtZSkgPj0gMCA6IGZhbHNlXG4gICAgICApO1xuXG4gICAgICByZXMuc3RhdHVzKEhUVFBfU1RBVFVTLk9LKTtcbiAgICAgIG5leHQoe1xuICAgICAgICByb3dzOiBmaWx0ZXJlZFBhY2thZ2VzLm1hcCgoZmlsdGVyZWRQYWNrYWdlOiBQYWNrYWdlKSA9PiAoe1xuICAgICAgICAgIHZhbHVlOiBmaWx0ZXJlZFBhY2thZ2UubmFtZSxcbiAgICAgICAgfSkpLFxuICAgICAgfSk7XG4gICAgfSk7XG4gIH0pO1xufVxuIl19