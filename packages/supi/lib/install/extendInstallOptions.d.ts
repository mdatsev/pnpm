import { Lockfile } from '@pnpm/lockfile-file';
import { IncludedDependencies } from '@pnpm/modules-yaml';
import { LocalPackages } from '@pnpm/resolver-base';
import { StoreController } from '@pnpm/store-controller-types';
import { ReadPackageHook, Registries } from '@pnpm/types';
import { ReporterFunction } from '../types';
export interface StrictInstallOptions {
    forceSharedLockfile: boolean;
    frozenLockfile: boolean;
    extraBinPaths: string[];
    useLockfile: boolean;
    lockfileOnly: boolean;
    preferFrozenLockfile: boolean;
    saveWorkspaceProtocol: boolean;
    storeController: StoreController;
    storeDir: string;
    reporter: ReporterFunction;
    force: boolean;
    update: boolean;
    depth: number;
    resolutionStrategy: 'fast' | 'fewer-dependencies';
    lockfileDir: string;
    rawConfig: object;
    verifyStoreIntegrity: boolean;
    engineStrict: boolean;
    nodeVersion: string;
    packageManager: {
        name: string;
        version: string;
    };
    pruneLockfileImporters: boolean;
    hooks: {
        readPackage?: ReadPackageHook;
        afterAllResolved?: (lockfile: Lockfile) => Lockfile;
    };
    sideEffectsCacheRead: boolean;
    sideEffectsCacheWrite: boolean;
    strictPeerDependencies: boolean;
    include: IncludedDependencies;
    ignoreCurrentPrefs: boolean;
    ignoreScripts: boolean;
    childConcurrency: number;
    userAgent: string;
    unsafePerm: boolean;
    registries: Registries;
    lock: boolean;
    lockStaleDuration: number;
    tag: string;
    locks: string;
    ownLifecycleHooksStdio: 'inherit' | 'pipe';
    localPackages: LocalPackages;
    pruneStore: boolean;
    virtualStoreDir?: string;
    dir: string;
    hoistPattern: string[] | undefined;
    forceHoistPattern: boolean;
    shamefullyHoist: boolean;
    forceShamefullyHoist: boolean;
    independentLeaves: boolean;
    forceIndependentLeaves: boolean;
}
export declare type InstallOptions = Partial<StrictInstallOptions> & Pick<StrictInstallOptions, 'storeDir' | 'storeController'>;
declare const _default: (opts: InstallOptions) => Promise<StrictInstallOptions>;
export default _default;
